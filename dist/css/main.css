html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

/*  SETTINGS FOR THE NEAT GRID */
/* http://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/ */
/*  get values from nested map  */
/*  http://andyshora.com/css-image-container-padding-hack.html  */
/*
List of font sizes / attributes
The null key == default styles (no media query)
Values can be one value (size) as px or a list of type attributes e.g.:
(size, color, weight, line-height, letter-spacing, text-transform)
null values in the list will be ommitted
 */
/*  Assign to vars - then use in type placeholders _placeholders.scss  */
body {
  -webkit-font-smoothing: antialiased;
  font-family: "Oswald", sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Oswald", sans-serif;
  margin: 0;
  text-rendering: optimizeLegibility; }

a {
  text-decoration: none;
  color: #ffffff;
  text-transform: uppercase; }

.about-copy {
  text-transform: none;
  margin: 7%; }
  .about-copy a {
    color: #757575;
    text-transform: none; }

.about-card__role {
  color: #757575; }

h1, .heading-1 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h1, .heading-1 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h1, .heading-1 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h1, .heading-1 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h1, .heading-1 {
      font-size: 64px; } }

h2, .heading-2 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h2, .heading-2 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h2, .heading-2 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h2, .heading-2 {
      font-size: 46px; } }
  @media screen and (min-width: 1024px) {
    h2, .heading-2 {
      font-size: 50px; } }

h3, .heading-3 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h3, .heading-3 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h3, .heading-3 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h3, .heading-3 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h3, .heading-3 {
      font-size: 64px; } }

p, .paragraph {
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    p, .paragraph {
      font-size: 20px; } }

.about-card__role {
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 0.02em; }
  @media screen and (min-width: 480px) {
    .about-card__role {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    .about-card__role {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    .about-card__role {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    .about-card__role {
      font-size: 16px; } }

/*# sourceMappingURL=data:application/json;base64, */
