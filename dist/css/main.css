html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

/*  SETTINGS FOR THE NEAT GRID */
/* http://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/ */
/*  get values from nested map  */
/*  http://andyshora.com/css-image-container-padding-hack.html  */
/*
List of font sizes / attributes
The null key == default styles (no media query)
Values can be one value (size) as px or a list of type attributes e.g.:
(size, color, weight, line-height, letter-spacing, text-transform)
null values in the list will be ommitted
 */
/*  Assign to vars - then use in type placeholders _placeholders.scss  */
@font-face {
  font-family: "Cardo-Regular";
  src: url("fonts/Cardo/Cardo-Regular.ttf"); }

@font-face {
  font-family: "Cardo-Italic";
  src: url("fonts/Cardo/Cardo-Italic.ttf"); }

@font-face {
  font-family: "SuisseBPIntl-Medium";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Medium.otf"); }

@font-face {
  font-family: "SuisseBPIntl-Bold";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Bold.otf"); }

@font-face {
  font-family: "SuisseBPIntl-Regular";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Regular.otf"); }

@font-face {
  font-family: "Cormorant-Italic";
  src: url("fonts/Cormorant/Cormorant-Italic.ttf"); }

@font-face {
  font-family: "Cormorant-MediumItalic";
  src: url("fonts/Cormorant/Cormorant-MediumItalic.ttf"); }

body {
  -webkit-font-smoothing: antialiased;
  font-family: "Cormorant-MediumItalic", sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Cormorant-MediumItalic", sans-serif;
  margin: 0;
  text-rendering: optimizeLegibility; }

a {
  text-decoration: none;
  color: #ffffff; }

.nav_item {
  font-family: "SuisseBPIntl-Regular";
  color: #000; }

.nav_subitem {
  font-family: "SuisseBPIntl-Regular";
  color: #000; }

h1, .heading-1 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h1, .heading-1 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h1, .heading-1 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h1, .heading-1 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h1, .heading-1 {
      font-size: 64px; } }

h2, .heading-2 {
  font-size: 28px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 768px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 967px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 1024px) {
    h2, .heading-2 {
      font-size: 28px; } }

h3, .heading-3 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h3, .heading-3 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h3, .heading-3 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h3, .heading-3 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h3, .heading-3 {
      font-size: 64px; } }

p, .paragraph {
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    p, .paragraph {
      font-size: 20px; } }

.nav_item {
  font-size: 24px;
  font-weight: 400;
  line-height: 1.9em; }
  @media screen and (min-width: 480px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    .nav_item {
      font-size: 20px; } }

.nav_subitem {
  font-size: 16px;
  font-weight: 400;
  line-height: 2.9em; }
  @media screen and (min-width: 480px) {
    .nav_subitem {
      font-size: 16px; } }
  @media screen and (min-width: 768px) {
    .nav_subitem {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    .nav_subitem {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    .nav_subitem {
      font-size: 20px; } }

/* components */
.nav {
  background-color: #262E2E;
  position: absolute;
  width: 100%;
  height: 100%; }

.nav_item {
  font-family: "SuisseBPIntl-Regular", sans-serif; }

@media screen and (min-width: 480px) {
  .nav_subitem-wrapper {
    display: none; } }

.nav-item--home {
  display: none; }
  @media screen and (min-width: 480px) {
    .nav-item--home {
      display: inline-block; } }

.nav_wrapper,
.nav_subitem-wrapper {
  list-style: none;
  padding: 0;
  margin: 0; }

.nav_subitem-wrapper {
  padding-bottom: .7em; }

.nav_wrapper {
  text-align: center;
  position: relative;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  transform: translate(0, -50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%); }

.nav_button--close {
  width: 2.5em;
  height: 2.5em;
  position: absolute; }

.nav_button {
  position: absolute;
  left: 1.5em;
  top: 3em; }

/*# sourceMappingURL=data:application/json;base64, */
