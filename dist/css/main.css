html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

/*  SETTINGS FOR THE NEAT GRID */
/* http://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/ */
/*  get values from nested map  */
/*  http://andyshora.com/css-image-container-padding-hack.html  */
/*
List of font sizes / attributes
The null key == default styles (no media query)
Values can be one value (size) as px or a list of type attributes e.g.:
(size, color, weight, line-height, letter-spacing, text-transform)
null values in the list will be ommitted
 */
/*  Assign to vars - then use in type placeholders _placeholders.scss  */
@font-face {
  font-family: "Cardo-Regular";
  src: url("fonts/Cardo/Cardo-Regular.ttf"); }

@font-face {
  font-family: "Cardo-Italic";
  src: url("fonts/Cardo/Cardo-Italic.ttf"); }

@font-face {
  font-family: "SuisseBPIntl-Medium";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Medium.otf"); }

@font-face {
  font-family: "SuisseBPIntl-Bold";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Bold.otf"); }

@font-face {
  font-family: "SuisseBPIntl-Regular";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Regular.otf"); }

@font-face {
  font-family: "Cormorant-Italic";
  src: url("fonts/Cormorant/Cormorant-Italic.ttf"); }

@font-face {
  font-family: "Cormorant-MediumItalic";
  src: url("fonts/Cormorant/Cormorant-MediumItalic.ttf"); }

body {
  -webkit-font-smoothing: antialiased;
  font-family: "SuisseBPIntl-Regular", sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "SuisseBPIntl-Regular", sans-serif;
  margin: 0;
  text-rendering: optimizeLegibility; }

h1, .heading-1 {
  color: #fff; }

a {
  text-decoration: none;
  color: #ffffff; }

.video_headline--italic {
  font-family: "Cormorant-Italic", sans-serif;
  font-size: italic; }

.nav_item {
  font-family: "SuisseBPIntl-Regular";
  color: #000; }

.nav_subitem {
  font-family: "SuisseBPIntl-Regular";
  color: #000; }

.featured-project_location {
  font-family: "Cormorant-Italic", sans-serif;
  font-size: italic;
  margin-top: 0; }

.hero-text_copy {
  font-family: "Cormorant-Italic", sans-serif;
  font-size: italic; }

h1, .heading-1 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em; }
  @media screen and (min-width: 480px) {
    h1, .heading-1 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h1, .heading-1 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h1, .heading-1 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h1, .heading-1 {
      font-size: 64px; } }

h2, .heading-2 {
  font-size: 28px;
  font-weight: 400;
  letter-spacing: 0.02em; }
  @media screen and (min-width: 480px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 768px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 967px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 1024px) {
    h2, .heading-2 {
      font-size: 28px; } }

h3, .heading-3 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em; }
  @media screen and (min-width: 480px) {
    h3, .heading-3 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h3, .heading-3 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h3, .heading-3 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h3, .heading-3 {
      font-size: 64px; } }

p, .paragraph {
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 0.02em; }
  @media screen and (min-width: 480px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    p, .paragraph {
      font-size: 20px; } }

.nav_item {
  font-size: 24px;
  font-weight: 400;
  line-height: 1.9em; }
  @media screen and (min-width: 480px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    .nav_item {
      font-size: 20px; } }

.nav_subitem {
  font-size: 16px;
  font-weight: 400;
  line-height: 2.9em; }
  @media screen and (min-width: 480px) {
    .nav_subitem {
      font-size: 16px; } }
  @media screen and (min-width: 768px) {
    .nav_subitem {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    .nav_subitem {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    .nav_subitem {
      font-size: 20px; } }

/* components */
.nav {
  position: absolute;
  width: 100%;
  height: 20%;
  z-index: 10;
  overflow: hidden; }
  @media screen and (min-width: 768px) {
    .nav {
      height: auto; } }

@media screen and (min-width: 768px) {
  .nav_item {
    display: inline-block;
    padding-left: 3%; } }

@media screen and (min-width: 967px) {
  .nav_item {
    display: inline-block;
    padding-left: 3%; } }

@media screen and (min-width: 768px) {
  .nav_subitem-wrapper {
    display: none; } }

.nav-item--home {
  display: none; }
  @media screen and (min-width: 768px) {
    .nav-item--home {
      display: inline-block;
      float: right;
      padding-left: 0;
      padding-right: 8%; } }

.nav_wrapper,
.nav_subitem-wrapper {
  list-style: none;
  padding: 0;
  margin: 0; }

.nav_subitem-wrapper {
  padding-bottom: .7em; }

@media screen and (max-width: 767px) {
  .nav_wrapper {
    display: none;
    text-align: center;
    position: relative;
    top: 50%;
    -webkit-transform: translate(0, -50%);
    transform: translate(0, -50%);
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%); } }

@media screen and (min-width: 768px) {
  .nav_wrapper {
    padding-top: 4em; } }

.nav_button--close {
  width: 2.5em;
  height: 2.5em;
  display: none; }

.nav_icon--logo.logo-xs {
  position: absolute;
  right: 1.5em;
  top: 3em;
  width: 3em;
  height: 3em; }
  @media screen and (min-width: 768px) {
    .nav_icon--logo.logo-xs {
      display: none; } }

.nav_icon--logo.logo-xl {
  display: none; }
  @media screen and (min-width: 768px) {
    .nav_icon--logo.logo-xl {
      display: inline;
      height: 42px;
      max-width: 102px; } }

.nav_button {
  outline: none;
  position: absolute;
  left: 1.5em;
  top: 3em;
  width: 2.5em;
  height: 2.5em;
  background-color: transparent;
  border: none;
  z-index: 11; }
  @media screen and (min-width: 768px) {
    .nav_button {
      display: none; } }

.nav_icon {
  position: absolute;
  left: 0;
  top: 0;
  width: 2.5em;
  height: 2.5em; }

@media screen and (max-width: 767px) {
  .nav-is-open {
    overflow: hidden; }
    .nav-is-open .nav {
      background-color: #262E2E;
      height: 100%; }
    .nav-is-open .nav_button--close {
      display: block; }
    .nav-is-open .nav_button--open {
      display: none; }
    .nav-is-open .nav_wrapper {
      display: block; }
    .nav-is-open .nav_icon--logo {
      opacity: 0; } }

.button {
  display: block;
  width: 150px;
  border: 1px solid;
  margin: auto;
  padding: 1em;
  margin-top: 1.5em; }

.header {
  position: relative;
  overflow: hidden; }

@media screen and (max-width: 767px) {
  .header_img {
    min-height: 559px;
    max-height: 559px;
    left: -200%;
    right: -200%;
    margin: auto; } }

@media screen and (min-width: 768px) {
  .header_img {
    max-width: 100%; } }

#video {
  position: relative;
  background: transparent;
  z-index: -100;
  display: none; }

.ytplayer-container {
  position: absolute;
  top: 0;
  z-index: -1; }

.video-container {
  height: 100%; }
  @media screen and (min-width: 768px) {
    .video-container {
      height: 0;
      position: relative;
      padding-bottom: 71.4996%; }
      .video-container > img {
        width: 100%;
        height: 100%;
        position: absolute; } }
  @media screen and (max-width: 767px) {
    .video-container {
      min-height: 559px;
      position: relative; } }

.mb-background {
  margin: 0 auto;
  position: absolute;
  width: 100%;
  height: 100%;
  background-size: cover;
  z-index: 0;
  opacity: 0.75;
  left: -200%;
  right: -200%;
  margin: auto; }
  @media screen and (max-width: 767px) {
    .mb-background {
      width: auto; } }

.video_headline {
  position: absolute;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  transform: translate(0, -50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  width: 100%;
  text-align: center; }

/* Hide video for tablet and mobile screen sizes */
@media screen and (min-width: 768px) {
  .mb-background {
    display: none; }
  #video {
    display: block; } }

.icon--scroll {
  max-width: 2em;
  position: absolute;
  bottom: 2em;
  left: 50%;
  max-height: 32px;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%); }

.times-container {
  color: #FBFBFB;
  z-index: 1;
  position: absolute;
  text-align: left;
  width: 500px;
  height: 24px;
  right: -185px;
  bottom: 75%;
  -webkit-transform: rotate(-90deg);
  -moz-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  -o-transform: rotate(-90deg);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3); }
  @media screen and (max-width: 1000px) {
    .times-container {
      display: none; } }
  @media screen and (min-width: 967px) {
    .times-container {
      bottom: 60%; } }

.time-line {
  display: inline-block;
  position: relative;
  margin-right: 30px;
  height: 1px;
  width: 50px;
  margin-left: -35%;
  background: #ffffff;
  top: 13px;
  opacity: 0.35;
  filter: alpha(opacity=35);
  -moz-opacity: 0.35; }

.time-title {
  display: block;
  font-size: 13px;
  font-family: 'Cormorant-MediumItalic', Georgia, serif;
  margin-bottom: 0px;
  margin-left: 1px; }

.time-uk-container,
.time-paris-container,
.time-nyc-container,
.time-los-angeles-container {
  font-family: 'SuisseBPIntl-Medium', Georgia, serif;
  display: inline-block;
  vertical-align: top;
  margin-right: 10%;
  width: 70px;
  font-size: 14px;
  position: relative; }

.time-los-angeles-container:after,
.time-nyc-container:after,
.time-uk-container:after {
  content: '';
  position: absolute;
  right: -30%;
  top: 20px;
  width: 5px;
  height: 4px;
  background-color: #fff;
  border-radius: 100%; }

.featured-project {
  position: relative;
  overflow: hidden; }

.featured-project_image {
  vertical-align: bottom; }
  @media screen and (max-width: 767px) {
    .featured-project_image {
      min-height: 559px;
      max-height: 559px;
      left: -100%;
      right: -100%;
      position: relative; } }
  @media screen and (min-width: 768px) {
    .featured-project_image {
      max-width: 100%; } }

.featured-project_copy-wrapper {
  position: absolute;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  transform: translate(0, -50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  width: 100%;
  text-align: center;
  color: #FFFFFF; }

.featured-project_intro-copy {
  font-size: 14px; }

.featured-project_intro-headline {
  margin-top: 1em; }

.featured-project_cta {
  display: block;
  width: 150px;
  border: 1px solid #FFFFFF;
  margin: auto;
  padding: 1em;
  margin-top: 1.5em; }

.hero-text {
  background: #FAE032;
  text-align: center;
  color: #262E2E;
  padding: 4em 0; }

.hero-text_copy {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 82.94039%;
  margin-left: 8.5298%;
  margin-bottom: 1.5em;
  margin-top: 0; }
  .hero-text_copy:last-child {
    margin-right: 0; }
  @media screen and (min-width: 768px) {
    .hero-text_copy {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 48.82117%;
      margin-left: 25.58941%; }
      .hero-text_copy:last-child {
        margin-right: 0; } }

.hero-copy_cta {
  max-width: 102px;
  color: #262E2E;
  border-color: #262E2E;
  clear: both; }

body {
  overflow-x: hidden; }

.container {
  overflow-x: hidden; }

/*# sourceMappingURL=data:application/json;base64, */
