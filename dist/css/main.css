html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

/*  SETTINGS FOR THE NEAT GRID */
/* http://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/ */
/*  get values from nested map  */
/*  http://andyshora.com/css-image-container-padding-hack.html  */
/*
List of font sizes / attributes
The null key == default styles (no media query)
Values can be one value (size) as px or a list of type attributes e.g.:
(size, color, weight, line-height, letter-spacing, text-transform)
null values in the list will be ommitted
 */
/*  Assign to vars - then use in type placeholders _placeholders.scss  */
@font-face {
  font-family: "Cardo-Regular";
  src: url("fonts/Cardo/Cardo-Regular.ttf"); }

@font-face {
  font-family: "Cardo-Italic";
  src: url("fonts/Cardo/Cardo-Italic.ttf"); }

@font-face {
  font-family: "SuisseBPIntl-Medium";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Medium.otf"); }

@font-face {
  font-family: "SuisseBPIntl-Bold";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Bold.otf"); }

@font-face {
  font-family: "SuisseBPIntl-Regular";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Regular.otf"); }

@font-face {
  font-family: "Cormorant-Italic";
  src: url("fonts/Cormorant/Cormorant-Italic.ttf"); }

@font-face {
  font-family: "Cormorant-MediumItalic";
  src: url("fonts/Cormorant/Cormorant-MediumItalic.ttf"); }

body {
  -webkit-font-smoothing: antialiased;
  font-family: "Cormorant-MediumItalic", sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Cormorant-MediumItalic", sans-serif;
  margin: 0;
  text-rendering: optimizeLegibility; }

a {
  text-decoration: none;
  color: #ffffff; }

.nav_item {
  font-family: "SuisseBPIntl-Regular";
  color: #000; }

.nav_subitem {
  font-family: "SuisseBPIntl-Regular";
  color: #000; }

h1, .heading-1 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h1, .heading-1 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h1, .heading-1 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h1, .heading-1 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h1, .heading-1 {
      font-size: 64px; } }

h2, .heading-2 {
  font-size: 28px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 768px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 967px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 1024px) {
    h2, .heading-2 {
      font-size: 28px; } }

h3, .heading-3 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h3, .heading-3 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h3, .heading-3 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h3, .heading-3 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h3, .heading-3 {
      font-size: 64px; } }

p, .paragraph {
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    p, .paragraph {
      font-size: 20px; } }

.nav_item {
  font-size: 24px;
  font-weight: 400;
  line-height: 1.9em; }
  @media screen and (min-width: 480px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    .nav_item {
      font-size: 20px; } }

.nav_subitem {
  font-size: 16px;
  font-weight: 400;
  line-height: 2.9em; }
  @media screen and (min-width: 480px) {
    .nav_subitem {
      font-size: 16px; } }
  @media screen and (min-width: 768px) {
    .nav_subitem {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    .nav_subitem {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    .nav_subitem {
      font-size: 20px; } }

/* components */
.nav {
  position: absolute;
  background-color: blue;
  width: 100%;
  height: 20%; }

.nav_item {
  font-family: "SuisseBPIntl-Regular", sans-serif; }

@media screen and (min-width: 480px) {
  .nav_subitem-wrapper {
    display: none; } }

.nav-item--home {
  display: none; }
  @media screen and (min-width: 480px) {
    .nav-item--home {
      display: inline-block; } }

.nav_wrapper,
.nav_subitem-wrapper {
  list-style: none;
  padding: 0;
  margin: 0; }

.nav_subitem-wrapper {
  padding-bottom: .7em; }

.nav_wrapper {
  display: none;
  text-align: center;
  position: relative;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  transform: translate(0, -50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%); }

.nav_button--close {
  width: 2.5em;
  height: 2.5em;
  display: none; }

.nav_button {
  position: absolute;
  left: 1.5em;
  top: 3em;
  width: 2.5em;
  height: 2.5em; }

.nav_icon {
  position: absolute;
  left: 0;
  top: 0;
  width: 2.5em;
  height: 2.5em; }

.nav.is-open {
  background-color: #262E2E;
  height: 100%; }
  .nav.is-open .nav_button--close {
    display: block; }
  .nav.is-open .nav_button--open {
    display: none; }
  .nav.is-open .nav_wrapper {
    display: block; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1peGlucy9uZWF0L2dyaWQvX2JveC1zaXppbmcuc2NzcyIsImJhc2UvbmVhdC1ncmlkLXNldHRpbmdzLnNjc3MiLCJtaXhpbnMvX3R5cG9ncmFwaHkuc2NzcyIsIm1peGlucy9fbWFwLWRlZXAtZ2V0LnNjc3MiLCJtaXhpbnMvX2ZsdWlkLWltYWdlLWNvbnRhaW5lci5zY3NzIiwiX3ZhcmlhYmxlcy5zY3NzIiwiX3R5cG9ncmFwaHkuc2NzcyIsIl9wbGFjZWhvbGRlcnMuc2NzcyIsIm1haW4uc2NzcyIsIl9uYXYuc2NzcyIsIm1peGlucy9uZWF0L2dyaWQvX21lZGlhLnNjc3MiLCJtaXhpbnMvX3ZlcnRpY2FsLWFsaWduLnNjc3MiLCJtaXhpbnMvYm91cmJvbi9hZGRvbnMvX3ByZWZpeGVyLnNjc3MiLCJfY29sb3Vycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdFO0VBQ0UsdUJBQXVCLEVBQ3hCOztBQUVEO0VBSUksb0JBQW9CLEVBQ3JCOztBQ1pMLGlDQUFpQztBQ0NqQyxtRkFBbUY7QUNEbkYsa0NBQWtDO0FDQWxDLGtFQUFrRTtBQ3lCbEU7Ozs7OztHQU1HO0FBcURILHlFQUF5RTtBQ3BGekU7RUFDRyw2QkFBNkI7RUFDN0IsMENBQVEsRUFBQTs7QUFHWDtFQUNHLDRCQUE0QjtFQUM1Qix5Q0FBUSxFQUFBOztBQUdYO0VBQ0csbUNBQW1DO0VBQ25DLHVEQUFRLEVBQUE7O0FBR1g7RUFDRyxpQ0FBaUM7RUFDakMscURBQVEsRUFBQTs7QUFHWDtFQUNHLG9DQUFvQztFQUNwQyx3REFBUSxFQUFBOztBQUdYO0VBQ0csZ0NBQWdDO0VBQ2hDLGlEQUFRLEVBQUE7O0FBR1g7RUFDRyxzQ0FBc0M7RUFDdEMsdURBQVEsRUFBQTs7QUFJWDtFQUNDLG9DQUFvQztFQUNwQyxrREFBa0QsRUFDbEQ7O0FBRUQ7Ozs7OztFQU1DLGtEQUFrRDtFQUNsRCxVQUFVO0VBQ1YsbUNBQW1DLEVBQ25DOztBQWtCRDtFQUNDLHNCQUFzQjtFQUN0QixlQUFlLEVBRWY7O0FBRUQ7RUFDRSxvQ0FBb0M7RUFFcEMsWUFBWSxFQUNiOztBQUVEO0VBQ0Usb0NBQW9DO0VBRXBDLFlBQVksRUFDYjs7QUFoQ0Q7RUp6QkksZ0JHT1M7RUhGUCxpQkdFa0I7RUhJbEIsdUJHSitCO0VITy9CLDBCR1AwQyxFRWhDL0M7RUxZSztJSXNDTjtNSlBJLGdCR1ZTLEVFakNaLEVBQUE7RUxZSztJSXNDTjtNSlBJLGdCR1RVLEVFbENiLEVBQUE7RUxZSztJSXNDTjtNSlBJLGdCR1JTLEVFbkNaLEVBQUE7RUxZSztJSXNDTjtNSlBJLGdCR1BVLEVFcENiLEVBQUE7O0FEc0REO0VKN0JJLGdCR2NTO0VIVFAsaUJHU2tCO0VISGxCLHVCR0crQjtFSEEvQiwwQkdBMEMsRUVuQy9DO0VMUUs7SUkwQ047TUpYSSxnQkdIUyxFRXBDWixFQUFBO0VMUUs7SUkwQ047TUpYSSxnQkdGVSxFRXJDYixFQUFBO0VMUUs7SUkwQ047TUpYSSxnQkdEUyxFRXRDWixFQUFBO0VMUUs7SUkwQ047TUpYSSxnQkdBVSxFRXZDYixFQUFBOztBRHNERDtFSmpDSSxnQkdxQlM7RUhoQlAsaUJHZ0JrQjtFSFZsQix1QkdVK0I7RUhQL0IsMEJHTzBDLEVFdEMvQztFTElLO0lJOENOO01KZkksZ0JHSVMsRUV2Q1osRUFBQTtFTElLO0lJOENOO01KZkksZ0JHS1UsRUV4Q2IsRUFBQTtFTElLO0lJOENOO01KZkksZ0JHTVMsRUV6Q1osRUFBQTtFTElLO0lJOENOO01KZkksZ0JHT1UsRUUxQ2IsRUFBQTs7QURzREQ7RUpyQ0ksZ0JHNEJTO0VIdkJQLGlCR3VCa0I7RUhqQmxCLHVCR2lCK0I7RUhkL0IsMEJHYzBDLEVFekMvQztFTEFLO0lJa0ROO01KbkJJLGdCR1dTLEVFMUNaLEVBQUE7RUxBSztJSWtETjtNSm5CSSxnQkdZVSxFRTNDYixFQUFBO0VMQUs7SUlrRE47TUpuQkksZ0JHYVMsRUU1Q1osRUFBQTtFTEFLO0lJa0ROO01KbkJJLGdCR2NVLEVFN0NiLEVBQUE7O0FENEREO0VKL0NJLGdCRzBDUztFSHJDUCxpQkdxQ2tCO0VIbENsQixtQkdrQ3lCLEVFL0M5QjtFTFJLO0lJNEROO01KN0JJLGdCR3lCUyxFRWhEWixFQUFBO0VMUks7SUk0RE47TUo3QkksZ0JHMEJVLEVFakRiLEVBQUE7RUxSSztJSTRETjtNSjdCSSxnQkcyQlMsRUVsRFosRUFBQTtFTFJLO0lJNEROO01KN0JJLGdCRzRCVSxFRW5EYixFQUFBOztBRDBERDtFSnJESSxnQkdpRFM7RUg1Q1AsaUJHNENrQjtFSHpDbEIsbUJHeUN5QixFRWxEOUI7RUxaSztJSWtFTjtNSm5DSSxnQkdnQ1MsRUVuRFosRUFBQTtFTFpLO0lJa0VOO01KbkNJLGdCR2lDVSxFRXBEYixFQUFBO0VMWks7SUlrRU47TUpuQ0ksZ0JHa0NTLEVFckRaLEVBQUE7RUxaSztJSWtFTjtNSm5DSSxnQkdtQ1UsRUV0RGIsRUFBQTs7QUNURCxnQkFBZ0I7QUNqQmhCO0VBQ0MsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUNwQixZQUFZO0VBQ1osWUFBWSxFQUNmOztBQUVEO0VBQ0MsZ0RBQWdELEVBQ2hEOztBQzZFRztFRDNFSjtJQUVFLGNBQWMsRUFFZixFQUFBOztBQUVEO0VBQ0MsY0FBYyxFQUlkO0VDZ0VHO0lEckVKO01BR0Usc0JBQXNCLEVBRXZCLEVBQUE7O0FBRUQ7O0VBRUMsaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCxVQUFVLEVBQ1Y7O0FBRUQ7RUFDQyxxQkFBcUIsRUFDckI7O0FBRUQ7RUFDQyxjQUFjO0VBRWQsbUJBQW1CO0VFckNsQixtQkFEdUM7RUFFdkMsU0FBUztFQ2lDSCxzQ0RoQ3NCO0VDZ0R0Qiw4QkRoRHNCO0VDZ0N0QixvQ0QvQnVCO0VDK0N2Qiw0QkQvQ3VCLEVGb0M5Qjs7QUFFRDtFQUNDLGFBQWE7RUFDYixjQUFjO0VBQ2QsY0FBYyxFQUNkOztBQUVEO0VBQ0MsbUJBQW1CO0VBQ25CLFlBQVk7RUFDVCxTQUFTO0VBQ1QsYUFBYTtFQUNoQixjQUFjLEVBQ2Q7O0FBRUQ7RUFDQyxtQkFBbUI7RUFDaEIsUUFBUTtFQUNSLE9BQU87RUFDUCxhQUFhO0VBQ2hCLGNBQWMsRUFDZDs7QUFFRDtFQUNDLDBCSWpFa0I7RUprRWxCLGFBQWEsRUFhYjtFQWZEO0lBS0UsZUFBZSxFQUNmO0VBTkY7SUFTRSxjQUFjLEVBQ2Q7RUFWRjtJQWFFLGVBQWUsRUFDZiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuQGlmICRib3JkZXItYm94LXNpemluZyA9PSB0cnVlIHtcbiAgaHRtbCB7IC8vIGh0dHA6Ly9iaXQubHkvMXFrMnRWUlxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICAqIHtcbiAgICAmLFxuICAgICY6OmFmdGVyLFxuICAgICY6OmJlZm9yZSB7XG4gICAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgIH1cbiAgfVxufVxuIiwiLyogIFNFVFRJTkdTIEZPUiBUSEUgTkVBVCBHUklEICovXG5cbiRncmlkLWNvbHVtbnM6IDEyO1xuJG1heC13aWR0aC1weDogMTAyNHB4O1xuJG1heC13aWR0aDogMTAyNHB4O1xuXG4kdmlzdWFsLWdyaWQ6IGZhbHNlO1xuJHZpc3VhbC1ncmlkLWNvbG9yOiAjRTZGNkZGO1xuJHZpc3VhbC1ncmlkLW9wYWNpdHk6IDAuNDtcbi8vICR2aXN1YWwtZ3JpZC1pbmRleDogZnJvbnQ7XG5cbiRkaXNhYmxlLXdhcm5pbmdzOiB0cnVlOyIsIlxuLyogaHR0cDovL3d3dy5zbWFzaGluZ21hZ2F6aW5lLmNvbS8yMDE1LzA2L3Jlc3BvbnNpdmUtdHlwb2dyYXBoeS13aXRoLXNhc3MtbWFwcy8gKi9cblxuQG1peGluIHR5cGUtZm9ybWF0KCRtYXAsICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzKSB7XG4gIEBlYWNoICRicmVha3BvaW50LCAkdHlwZS1mb3JtYXQgaW4gJG1hcCB7XG4gICAgQGlmICRicmVha3BvaW50ID09IG51bGwge1xuICAgICAgQGluY2x1ZGUgZG8tdHlwZS1mb3JtYXQoJHR5cGUtZm9ybWF0KTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgLy8gSWYgJHR5cGUtZm9ybWF0IGlzIGEga2V5IHRoYXQgZXhpc3RzIGluXG4gICAgICAvLyAkYnJlYWtwb2ludHMsIHVzZSB0aGUgdmFsdWVcbiAgICAgIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRicmVha3BvaW50KSB7XG4gICAgICAgICRicmVha3BvaW50OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQpO1xuICAgICAgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQpIHtcbiAgICAgICAgQGluY2x1ZGUgZG8tdHlwZS1mb3JtYXQoJHR5cGUtZm9ybWF0KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG4vLyBVdGlsaXR5IGZ1bmN0aW9uIGZvciBtaXhpbiBmb250LXNpemVcbkBtaXhpbiBkby10eXBlLWZvcm1hdCgkdHlwZS1mb3JtYXQpIHtcbiAgLy8gSWYgJHR5cGUtZm9ybWF0IGlzIGEgbGlzdCwgaW5jbHVkZVxuICAvLyAoc2l6ZSwgY29sb3IsIHdlaWdodCwgbGluZS1oZWlnaHQsIGxldHRlci1zcGFjaW5nLCB0ZXh0LXRyYW5zZm9ybSlcbiAgQGlmIHR5cGUtb2YoJHR5cGUtZm9ybWF0KSA9PSBcImxpc3RcIiB7XG4gICAgZm9udC1zaXplOiBudGgoJHR5cGUtZm9ybWF0LCAxKTtcbiAgICBAaWYgKGxlbmd0aCgkdHlwZS1mb3JtYXQpID4gMSAmJiBudGgoJHR5cGUtZm9ybWF0LCAyKSAhPSBudWxsKSB7XG4gICAgICBjb2xvcjogbnRoKCR0eXBlLWZvcm1hdCwgMik7XG4gICAgfVxuICAgIEBpZiAobGVuZ3RoKCR0eXBlLWZvcm1hdCkgPiAyICYmIG50aCgkdHlwZS1mb3JtYXQsIDMpICE9IG51bGwpIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBudGgoJHR5cGUtZm9ybWF0LCAzKTtcbiAgICB9XG4gICAgQGlmIChsZW5ndGgoJHR5cGUtZm9ybWF0KSA+IDMgJiYgbnRoKCR0eXBlLWZvcm1hdCwgNCkgIT0gbnVsbCkge1xuICAgICAgbGluZS1oZWlnaHQ6IG50aCgkdHlwZS1mb3JtYXQsIDQpO1xuICAgIH1cbiAgICBAaWYgKGxlbmd0aCgkdHlwZS1mb3JtYXQpID4gNCAmJiBudGgoJHR5cGUtZm9ybWF0LCA1KSAhPSBudWxsKSB7XG4gICAgICBsZXR0ZXItc3BhY2luZzogbnRoKCR0eXBlLWZvcm1hdCwgNSk7XG4gICAgfVxuICAgIEBpZiAobGVuZ3RoKCR0eXBlLWZvcm1hdCkgPiA1ICYmIG50aCgkdHlwZS1mb3JtYXQsIDYpICE9IG51bGwpIHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBudGgoJHR5cGUtZm9ybWF0LCA2KTtcbiAgICB9XG4gIH1cbiAgQGVsc2Uge1xuICAgIGZvbnQtc2l6ZTogJHR5cGUtZm9ybWF0O1xuICB9XG59XG5cblxuIiwiLyogIGdldCB2YWx1ZXMgZnJvbSBuZXN0ZWQgbWFwICAqL1xuQGZ1bmN0aW9uIG1hcC1kZWVwLWdldCgkbWFwLCAka2V5cy4uLikge1xuICAgIEBlYWNoICRrZXkgaW4gJGtleXMge1xuICAgICAgICAkbWFwOiBtYXAtZ2V0KCRtYXAsICRrZXkpO1xuICAgIH1cbiAgICBAcmV0dXJuICRtYXA7XG59IiwiLyogIGh0dHA6Ly9hbmR5c2hvcmEuY29tL2Nzcy1pbWFnZS1jb250YWluZXItcGFkZGluZy1oYWNrLmh0bWwgICovXG5cblxuQG1peGluIGZsdWlkLWltYWdlLWNvbnRhaW5lcigkaW1hZ2Utd2lkdGgsICRpbWFnZS1oZWlnaHQpIHtcblxuXHRoZWlnaHQ6IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0cGFkZGluZy1ib3R0b206IGNhbGN1bGF0ZS1yYXRpby1oZWlnaHQoJGltYWdlLXdpZHRoLCAkaW1hZ2UtaGVpZ2h0KTtcblxuXHQ+IGltZyxcbiAgICA+IHN2ZyB7XG5cdCAgICB3aWR0aDogMTAwJTtcblx0ICAgIGhlaWdodDogMTAwJTtcblx0ICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0fVxuXG59XG5cbkBmdW5jdGlvbiBjYWxjdWxhdGUtcmF0aW8taGVpZ2h0KCRpbWFnZS13aWR0aCwgJGltYWdlLWhlaWdodCkge1xuXHQkaW1nLWhlaWdodDogJGltYWdlLWhlaWdodDtcblx0JGltZy13aWR0aDogJGltYWdlLXdpZHRoO1xuXHQkcmF0aW8taGVpZ2h0OiAoJGltZy1oZWlnaHQgLyAkaW1nLXdpZHRoKSAqIDEwMCU7XG5cdEByZXR1cm4gJHJhdGlvLWhlaWdodDtcbn1cblxuIiwiJGdyaWQtY29sdW1uczogMTI7XG5cbiRicmVha3BvaW50czogKFxuXHRzbWFsbDogNDgwcHgsXG5cdG1lZGl1bTogNzY4cHgsXG5cdGxhcmdlOiA5NjdweCxcblx0eGxhcmdlOiAxMDI0cHhcbik7XG5cblxuJHotaW5kZXg6IChcblx0YWJvdXQ6IDEwLFxuXHR0YWJzLXBhZ2luYXRpb246IDIsXG5cdHRhYnMtcGFnaW5hdGlvbi1iZzogMVxuKTtcblxuXG4kYmFja2dyb3VuZC1taW4tc2l6ZTogKFxuXHRzbWFsbDogNjEwcHgsXG5cdG1lZGl1bTogNzYwcHgsXG5cdGxhcmdlOiA3NjBweCxcblx0eGxhcmdlOiA3NjBweFxuKTtcblxuXG4vKlxuTGlzdCBvZiBmb250IHNpemVzIC8gYXR0cmlidXRlc1xuVGhlIG51bGwga2V5ID09IGRlZmF1bHQgc3R5bGVzIChubyBtZWRpYSBxdWVyeSlcblZhbHVlcyBjYW4gYmUgb25lIHZhbHVlIChzaXplKSBhcyBweCBvciBhIGxpc3Qgb2YgdHlwZSBhdHRyaWJ1dGVzIGUuZy46XG4oc2l6ZSwgY29sb3IsIHdlaWdodCwgbGluZS1oZWlnaHQsIGxldHRlci1zcGFjaW5nLCB0ZXh0LXRyYW5zZm9ybSlcbm51bGwgdmFsdWVzIGluIHRoZSBsaXN0IHdpbGwgYmUgb21taXR0ZWRcbiAqL1xuJHR5cGUtZm9ybWF0dGluZzogKFxuXHRoMTogKFxuXHRcdG51bGw6ICgzNHB4LCBudWxsLCA0MDAsIG51bGwsIC4wMmVtLCB1cHBlcmNhc2UpLFxuXHRcdHNtYWxsOiAzNnB4LFxuXHRcdG1lZGl1bTogNDJweCxcblx0XHRsYXJnZTogNjBweCxcblx0XHR4bGFyZ2U6IDY0cHgsXG5cdCksXG5cdGgyOiAoXG5cdFx0bnVsbDogKDI4cHgsIG51bGwsIDQwMCwgbnVsbCwgLjAyZW0sIHVwcGVyY2FzZSksXG5cdFx0c21hbGw6IDI4cHgsXG5cdFx0bWVkaXVtOiAyOHB4LFxuXHRcdGxhcmdlOiAyOHB4LFxuXHRcdHhsYXJnZTogMjhweCxcblx0KSxcblx0aDM6IChcblx0XHRudWxsOiAoMzRweCwgbnVsbCwgNDAwLCBudWxsLCAuMDJlbSwgdXBwZXJjYXNlKSxcblx0XHRzbWFsbDogMzZweCxcblx0XHRtZWRpdW06IDQycHgsXG5cdFx0bGFyZ2U6IDYwcHgsXG5cdFx0eGxhcmdlOiA2NHB4LFxuXHQpLFxuXHRwOiAoXG5cdFx0bnVsbDogKDIwcHgsIG51bGwsIDQwMCwgbnVsbCwgLjAyZW0sIHVwcGVyY2FzZSksXG5cdFx0c21hbGw6IDIwcHgsXG5cdFx0bWVkaXVtOiAyMHB4LFxuXHRcdGxhcmdlOiAyMHB4LFxuXHRcdHhsYXJnZTogMjBweCxcblx0KSxcblx0cm9sZTogKFxuXHRcdG51bGw6ICgyMHB4LCBudWxsLCA0MDAsIG51bGwsIC4wMmVtLCBudWxsKSxcblx0XHRzbWFsbDogMjBweCxcblx0XHRtZWRpdW06IDIwcHgsXG5cdFx0bGFyZ2U6IDIwcHgsXG5cdFx0eGxhcmdlOiAxNnB4LFxuXHQpLFxuXHRuYXY6IChcblx0XHRudWxsOiAoMjRweCwgbnVsbCwgNDAwLCAxLjllbSwgbnVsbCwgbnVsbCksXG5cdFx0c21hbGw6IDIwcHgsXG5cdFx0bWVkaXVtOiAyMHB4LFxuXHRcdGxhcmdlOiAyMHB4LFxuXHRcdHhsYXJnZTogMjBweCxcblx0KSxcblx0bmF2LXN1Yml0ZW06IChcblx0XHRudWxsOiAoMTZweCwgbnVsbCwgNDAwLCAyLjllbSwgbnVsbCwgbnVsbCksXG5cdFx0c21hbGw6IDE2cHgsXG5cdFx0bWVkaXVtOiAyMHB4LFxuXHRcdGxhcmdlOiAyMHB4LFxuXHRcdHhsYXJnZTogMjBweCxcblx0KVxuKTtcblxuLyogIEFzc2lnbiB0byB2YXJzIC0gdGhlbiB1c2UgaW4gdHlwZSBwbGFjZWhvbGRlcnMgX3BsYWNlaG9sZGVycy5zY3NzICAqL1xuJHR5cGUtZm9ybWF0dGluZy1oMTogbWFwLWdldCgkdHlwZS1mb3JtYXR0aW5nLCAnaDEnKTtcbiR0eXBlLWZvcm1hdHRpbmctaDI6IG1hcC1nZXQoJHR5cGUtZm9ybWF0dGluZywgJ2gyJyk7XG4kdHlwZS1mb3JtYXR0aW5nLWgzOiBtYXAtZ2V0KCR0eXBlLWZvcm1hdHRpbmcsICdoMycpO1xuJHR5cGUtZm9ybWF0dGluZy1wOiBtYXAtZ2V0KCR0eXBlLWZvcm1hdHRpbmcsICdwJyk7XG4kdHlwZS1mb3JtYXR0aW5nLXJvbGU6IG1hcC1nZXQoJHR5cGUtZm9ybWF0dGluZywgJ3JvbGUnKTtcbiR0eXBlLWZvcm1hdHRpbmctbmF2OiBtYXAtZ2V0KCR0eXBlLWZvcm1hdHRpbmcsICduYXYnKTtcbiR0eXBlLWZvcm1hdHRpbmctc3ViLW5hdjogbWFwLWdldCgkdHlwZS1mb3JtYXR0aW5nLCAnbmF2LXN1Yml0ZW0nKTsiLCJAZm9udC1mYWNlIHtcbiAgXHRmb250LWZhbWlseTogXCJDYXJkby1SZWd1bGFyXCI7XG4gIFx0c3JjOiB1cmwoXCJmb250cy9DYXJkby9DYXJkby1SZWd1bGFyLnR0ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIFx0Zm9udC1mYW1pbHk6IFwiQ2FyZG8tSXRhbGljXCI7XG4gIFx0c3JjOiB1cmwoXCJmb250cy9DYXJkby9DYXJkby1JdGFsaWMudHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgXHRmb250LWZhbWlseTogXCJTdWlzc2VCUEludGwtTWVkaXVtXCI7XG4gIFx0c3JjOiB1cmwoXCJmb250cy9TdWlzc2VCUEludGwvU3Vpc3NlQlBJbnRsLU1lZGl1bS5vdGZcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICBcdGZvbnQtZmFtaWx5OiBcIlN1aXNzZUJQSW50bC1Cb2xkXCI7XG4gIFx0c3JjOiB1cmwoXCJmb250cy9TdWlzc2VCUEludGwvU3Vpc3NlQlBJbnRsLUJvbGQub3RmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgXHRmb250LWZhbWlseTogXCJTdWlzc2VCUEludGwtUmVndWxhclwiO1xuICBcdHNyYzogdXJsKFwiZm9udHMvU3Vpc3NlQlBJbnRsL1N1aXNzZUJQSW50bC1SZWd1bGFyLm90ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIFx0Zm9udC1mYW1pbHk6IFwiQ29ybW9yYW50LUl0YWxpY1wiO1xuICBcdHNyYzogdXJsKFwiZm9udHMvQ29ybW9yYW50L0Nvcm1vcmFudC1JdGFsaWMudHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgXHRmb250LWZhbWlseTogXCJDb3Jtb3JhbnQtTWVkaXVtSXRhbGljXCI7XG4gIFx0c3JjOiB1cmwoXCJmb250cy9Db3Jtb3JhbnQvQ29ybW9yYW50LU1lZGl1bUl0YWxpYy50dGZcIik7XG59XG5cblxuYm9keSB7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHRmb250LWZhbWlseTogXCJDb3Jtb3JhbnQtTWVkaXVtSXRhbGljXCIsIHNhbnMtc2VyaWY7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG5cdGZvbnQtZmFtaWx5OiBcIkNvcm1vcmFudC1NZWRpdW1JdGFsaWNcIiwgc2Fucy1zZXJpZjtcblx0bWFyZ2luOiAwO1xuXHR0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyAvLyBGaXggdGhlIGNoYXJhY3RlciBzcGFjaW5nIGZvciBoZWFkaW5nc1xufVxuXG5oMSwgLmhlYWRpbmctMSB7XG5cdEBleHRlbmQgJWhlYWRpbmctMTtcbn1cblxuaDIsIC5oZWFkaW5nLTIge1xuXHRAZXh0ZW5kICVoZWFkaW5nLTI7XG59XG5cbmgzLCAuaGVhZGluZy0zIHtcblx0QGV4dGVuZCAlaGVhZGluZy0zO1xufVxuXG5wLCAucGFyYWdyYXBoIHtcblx0QGV4dGVuZCAlcGFyYWdyYXBoO1xufVxuXG5hIHtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRjb2xvcjogI2ZmZmZmZjtcblx0Ly90ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4ubmF2X2l0ZW0ge1xuICBmb250LWZhbWlseTogXCJTdWlzc2VCUEludGwtUmVndWxhclwiO1xuICBAZXh0ZW5kICVuYXY7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4ubmF2X3N1Yml0ZW0ge1xuICBmb250LWZhbWlseTogXCJTdWlzc2VCUEludGwtUmVndWxhclwiO1xuICBAZXh0ZW5kICVzdWItbmF2O1xuICBjb2xvcjogIzAwMDtcbn0iLCIlaGVhZGluZy0xIHtcblx0QGluY2x1ZGUgdHlwZS1mb3JtYXQoJHR5cGUtZm9ybWF0dGluZy1oMSk7XG59XG5cbiVoZWFkaW5nLTIge1xuXHRAaW5jbHVkZSB0eXBlLWZvcm1hdCgkdHlwZS1mb3JtYXR0aW5nLWgyKTtcbn1cblxuJWhlYWRpbmctMyB7XG5cdEBpbmNsdWRlIHR5cGUtZm9ybWF0KCR0eXBlLWZvcm1hdHRpbmctaDMpO1xufVxuXG4lcGFyYWdyYXBoIHtcblx0QGluY2x1ZGUgdHlwZS1mb3JtYXQoJHR5cGUtZm9ybWF0dGluZy1wKTtcbn1cblxuJXJvbGUge1xuXHRAaW5jbHVkZSB0eXBlLWZvcm1hdCgkdHlwZS1mb3JtYXR0aW5nLXJvbGUpO1xufVxuXG4lbmF2IHtcblx0QGluY2x1ZGUgdHlwZS1mb3JtYXQoJHR5cGUtZm9ybWF0dGluZy1uYXYpO1xufVxuXG4lc3ViLW5hdiB7XG5cdEBpbmNsdWRlIHR5cGUtZm9ybWF0KCR0eXBlLWZvcm1hdHRpbmctc3ViLW5hdik7XG59IiwiQGltcG9ydCBcIm1peGlucy9ib3VyYm9uL2JvdXJib25cIjsgLy8gYWRkaW5nIGJvdXJib24gbGliXG5AaW1wb3J0IFwibWl4aW5zL25lYXQvbmVhdFwiOyAvLyBhZGRpbmcgbmVhdCBncmlkIGNvcyBib290c3RyYXAgc3Vja3NcbkBpbXBvcnQgXCJiYXNlL25lYXQtZ3JpZC1zZXR0aW5nc1wiO1xuXG5AaW1wb3J0ICdtaXhpbnMvdHlwb2dyYXBoeSc7XG5AaW1wb3J0ICdtaXhpbnMvbWFwLWRlZXAtZ2V0JztcbkBpbXBvcnQgJ21peGlucy9tZWRpYSc7XG5AaW1wb3J0ICdtaXhpbnMvZmx1aWQtaW1hZ2UtY29udGFpbmVyJztcbkBpbXBvcnQgJ21peGlucy9jZW50ZXItY3JvcC1hYnNvbHV0ZSc7XG5AaW1wb3J0ICdtaXhpbnMvaWNvbi1zcHJpdGVzJztcbkBpbXBvcnQgJ21peGlucy92ZXJ0aWNhbC1hbGlnbic7XG5cbkBpbXBvcnQgJ2NvbG91cnMnO1xuQGltcG9ydCAndmFyaWFibGVzJztcbkBpbXBvcnQgJ3R5cG9ncmFwaHknO1xuQGltcG9ydCAncGxhY2Vob2xkZXJzJztcblxuLyogY29tcG9uZW50cyAqL1xuQGltcG9ydCAnbmF2JztcblxuIiwiLm5hdiB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0YmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDIwJTtcbn1cblxuLm5hdl9pdGVtIHtcblx0Zm9udC1mYW1pbHk6IFwiU3Vpc3NlQlBJbnRsLVJlZ3VsYXJcIiwgc2Fucy1zZXJpZjtcbn1cblxuLm5hdl9zdWJpdGVtLXdyYXBwZXIge1xuXHRAaW5jbHVkZSBtcShmcm9tLCBzbWFsbCkge1xuXHRcdGRpc3BsYXk6IG5vbmU7XG5cdH1cbn1cblxuLm5hdi1pdGVtLS1ob21lIHtcblx0ZGlzcGxheTogbm9uZTtcblx0QGluY2x1ZGUgbXEoZnJvbSwgc21hbGwpIHtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdH1cbn1cblxuLm5hdl93cmFwcGVyLCBcbi5uYXZfc3ViaXRlbS13cmFwcGVyIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcblx0cGFkZGluZzogMDtcblx0bWFyZ2luOiAwO1xufVxuXG4ubmF2X3N1Yml0ZW0td3JhcHBlciB7XG5cdHBhZGRpbmctYm90dG9tOiAuN2VtO1xufVxuXG4ubmF2X3dyYXBwZXIge1xuXHRkaXNwbGF5OiBub25lO1xuXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblx0QGluY2x1ZGUgdmVydGljYWwtYWxpZ24oKTtcbn1cblxuLm5hdl9idXR0b24tLWNsb3NlIHtcblx0d2lkdGg6IDIuNWVtO1xuXHRoZWlnaHQ6IDIuNWVtO1xuXHRkaXNwbGF5OiBub25lO1xufVxuXG4ubmF2X2J1dHRvbiB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0bGVmdDogMS41ZW07XG4gICAgdG9wOiAzZW07XG4gICAgd2lkdGg6IDIuNWVtO1xuXHRoZWlnaHQ6IDIuNWVtO1xufVxuXG4ubmF2X2ljb24ge1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDIuNWVtO1xuXHRoZWlnaHQ6IDIuNWVtO1xufVxuXG4ubmF2LmlzLW9wZW4ge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkZGFyay1ncmF5O1xuXHRoZWlnaHQ6IDEwMCU7XG5cblx0Lm5hdl9idXR0b24tLWNsb3NlIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0fVxuXG5cdC5uYXZfYnV0dG9uLS1vcGVuIHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHR9XG5cblx0Lm5hdl93cmFwcGVyIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0fVxufSIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIE91dHB1dHMgYSBtZWRpYS1xdWVyeSBibG9jayB3aXRoIGFuIG9wdGlvbmFsIGdyaWQgY29udGV4dCAodGhlIHRvdGFsIG51bWJlciBvZiBjb2x1bW5zIHVzZWQgaW4gdGhlIGdyaWQpLlxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkcXVlcnlcbi8vLyAgIEEgbGlzdCBvZiBtZWRpYSBxdWVyeSBmZWF0dXJlcyBhbmQgdmFsdWVzLCB3aGVyZSBlYWNoIGAkZmVhdHVyZWAgc2hvdWxkIGhhdmUgYSBjb3JyZXNwb25kaW5nIGAkdmFsdWVgLlxuLy8vICAgRm9yIGEgbGlzdCBvZiB2YWxpZCB2YWx1ZXMgZm9yIGAkZmVhdHVyZWAsIGNsaWNrIFtoZXJlXShodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLW1lZGlhcXVlcmllcy8jbWVkaWExKS5cbi8vL1xuLy8vICAgSWYgdGhlcmUgaXMgb25seSBhIHNpbmdsZSBgJHZhbHVlYCBpbiBgJHF1ZXJ5YCwgYCRkZWZhdWx0LWZlYXR1cmVgIGlzIGdvaW5nIHRvIGJlIHVzZWQuXG4vLy9cbi8vLyAgIFRoZSBudW1iZXIgb2YgdG90YWwgY29sdW1ucyBpbiB0aGUgZ3JpZCBjYW4gYmUgc2V0IGJ5IHBhc3NpbmcgYCRjb2x1bW5zYCBhdCB0aGUgZW5kIG9mIHRoZSBsaXN0IChvdmVycmlkZXMgYCR0b3RhbC1jb2x1bW5zYCkuXG4vLy9cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyICh1bml0bGVzcyl9ICR0b3RhbC1jb2x1bW5zIFskZ3JpZC1jb2x1bW5zXVxuLy8vICAgLSBOdW1iZXIgb2YgY29sdW1ucyB0byB1c2UgaW4gdGhlIG5ldyBncmlkIGNvbnRleHQuIENhbiBiZSBzZXQgYXMgYSBzaG9ydGhhbmQgaW4gdGhlIGZpcnN0IHBhcmFtZXRlci5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLnJlc3BvbnNpdmUtZWxlbWVudCB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSg3NjlweCkge1xuLy8vICAgICAgICBAaW5jbHVkZSBzcGFuLWNvbHVtbnMoNik7XG4vLy8gICAgICB9XG4vLy8gICB9XG4vLy9cbi8vLyAgLm5ldy1jb250ZXh0LWVsZW1lbnQge1xuLy8vICAgIEBpbmNsdWRlIG1lZGlhKG1pbi13aWR0aCAzMjBweCBtYXgtd2lkdGggNDgwcHgsIDYpIHtcbi8vLyAgICAgIEBpbmNsdWRlIHNwYW4tY29sdW1ucyg2KTtcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIHtcbi8vLyAgICAucmVzcG9uc2l2ZS1lbGVtZW50IHtcbi8vLyAgICAgIGRpc3BsYXk6IGJsb2NrO1xuLy8vICAgICAgZmxvYXQ6IGxlZnQ7XG4vLy8gICAgICBtYXJnaW4tcmlnaHQ6IDIuMzU3NjUlO1xuLy8vICAgICAgd2lkdGg6IDQ4LjgyMTE3JTtcbi8vLyAgICB9XG4vLy9cbi8vLyAgICAucmVzcG9uc2l2ZS1lbGVtZW50Omxhc3QtY2hpbGQge1xuLy8vICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbi8vLyAgICAubmV3LWNvbnRleHQtZWxlbWVudCB7XG4vLy8gICAgICBkaXNwbGF5OiBibG9jaztcbi8vLyAgICAgIGZsb2F0OiBsZWZ0O1xuLy8vICAgICAgbWFyZ2luLXJpZ2h0OiA0LjgyOTE2JTtcbi8vLyAgICAgIHdpZHRoOiAxMDAlO1xuLy8vICAgIH1cbi8vL1xuLy8vICAgIC5uZXctY29udGV4dC1lbGVtZW50Omxhc3QtY2hpbGQge1xuLy8vICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuLy8vICAgIH1cbi8vLyAgfVxuXG5AbWl4aW4gbWVkaWEoJHF1ZXJ5OiAkZmVhdHVyZSAkdmFsdWUgJGNvbHVtbnMsICR0b3RhbC1jb2x1bW5zOiAkZ3JpZC1jb2x1bW5zKSB7XG4gIEBpZiBsZW5ndGgoJHF1ZXJ5KSA9PSAxIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAoJGRlZmF1bHQtZmVhdHVyZTogbnRoKCRxdWVyeSwgMSkpIHtcbiAgICAgICRkZWZhdWx0LWdyaWQtY29sdW1uczogJGdyaWQtY29sdW1ucztcbiAgICAgICRncmlkLWNvbHVtbnM6ICR0b3RhbC1jb2x1bW5zICFnbG9iYWw7XG4gICAgICBAY29udGVudDtcbiAgICAgICRncmlkLWNvbHVtbnM6ICRkZWZhdWx0LWdyaWQtY29sdW1ucyAhZ2xvYmFsO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgJGxvb3AtdG86IGxlbmd0aCgkcXVlcnkpO1xuICAgICRtZWRpYS1xdWVyeTogXCJzY3JlZW4gYW5kIFwiO1xuICAgICRkZWZhdWx0LWdyaWQtY29sdW1uczogJGdyaWQtY29sdW1ucztcbiAgICAkZ3JpZC1jb2x1bW5zOiAkdG90YWwtY29sdW1ucyAhZ2xvYmFsO1xuXG4gICAgQGlmIGlzLW5vdChpcy1ldmVuKGxlbmd0aCgkcXVlcnkpKSkge1xuICAgICAgJGdyaWQtY29sdW1uczogbnRoKCRxdWVyeSwgJGxvb3AtdG8pICFnbG9iYWw7XG4gICAgICAkbG9vcC10bzogJGxvb3AtdG8gLSAxO1xuICAgIH1cblxuICAgICRpOiAxO1xuICAgIEB3aGlsZSAkaSA8PSAkbG9vcC10byB7XG4gICAgICAkbWVkaWEtcXVlcnk6ICRtZWRpYS1xdWVyeSArIFwiKFwiICsgbnRoKCRxdWVyeSwgJGkpICsgXCI6IFwiICsgbnRoKCRxdWVyeSwgJGkgKyAxKSArIFwiKSBcIjtcblxuICAgICAgQGlmICgkaSArIDEpICE9ICRsb29wLXRvIHtcbiAgICAgICAgJG1lZGlhLXF1ZXJ5OiAkbWVkaWEtcXVlcnkgKyBcImFuZCBcIjtcbiAgICAgIH1cblxuICAgICAgJGk6ICRpICsgMjtcbiAgICB9XG5cbiAgICBAbWVkaWEgI3skbWVkaWEtcXVlcnl9IHtcbiAgICAgIEBjb250ZW50O1xuICAgICAgJGdyaWQtY29sdW1uczogJGRlZmF1bHQtZ3JpZC1jb2x1bW5zICFnbG9iYWw7XG4gICAgfVxuICB9XG59XG4iLCJAbWl4aW4gdmVydGljYWwtYWxpZ24oJHBvc2l0aW9uOiByZWxhdGl2ZSkge1xuICBwb3NpdGlvbjogJHBvc2l0aW9uO1xuICB0b3A6IDUwJTtcbiAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZSgwLC01MCUpKTtcbiAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVkoLTUwJSkpO1xufSIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIEEgbWl4aW4gZm9yIGdlbmVyYXRpbmcgdmVuZG9yIHByZWZpeGVzIG9uIG5vbi1zdGFuZGFyZGl6ZWQgcHJvcGVydGllcy5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkcHJvcGVydHlcbi8vLyAgIFByb3BlcnR5IHRvIHByZWZpeFxuLy8vXG4vLy8gQHBhcmFtIHsqfSAkdmFsdWVcbi8vLyAgIFZhbHVlIHRvIHVzZVxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkcHJlZml4ZXNcbi8vLyAgIFByZWZpeGVzIHRvIGRlZmluZVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIEBpbmNsdWRlIHByZWZpeGVyKGJvcmRlci1yYWRpdXMsIDEwcHgsIHdlYmtpdCBtcyBzcGVjKTtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxMHB4O1xuLy8vICAgICAtbW96LWJvcmRlci1yYWRpdXM6IDEwcHg7XG4vLy8gICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4vLy8gICB9XG4vLy9cbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLXdlYmtpdFxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3ItbW96aWxsYVxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3ItbWljcm9zb2Z0XG4vLy8gQHJlcXVpcmUge3ZhcmlhYmxlfSAkcHJlZml4LWZvci1vcGVyYVxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3Itc3BlY1xuXG5AbWl4aW4gcHJlZml4ZXIoJHByb3BlcnR5LCAkdmFsdWUsICRwcmVmaXhlcykge1xuICBAZWFjaCAkcHJlZml4IGluICRwcmVmaXhlcyB7XG4gICAgQGlmICRwcmVmaXggPT0gd2Via2l0IHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci13ZWJraXQge1xuICAgICAgICAtd2Via2l0LSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBtb3oge1xuICAgICAgQGlmICRwcmVmaXgtZm9yLW1vemlsbGEge1xuICAgICAgICAtbW96LSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBtcyB7XG4gICAgICBAaWYgJHByZWZpeC1mb3ItbWljcm9zb2Z0IHtcbiAgICAgICAgLW1zLSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBvIHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci1vcGVyYSB7XG4gICAgICAgIC1vLSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBzcGVjIHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci1zcGVjIHtcbiAgICAgICAgI3skcHJvcGVydHl9OiAkdmFsdWU7XG4gICAgICB9XG4gICAgfSBAZWxzZSAge1xuICAgICAgQHdhcm4gXCJVbnJlY29nbml6ZWQgcHJlZml4OiAjeyRwcmVmaXh9XCI7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBkaXNhYmxlLXByZWZpeC1mb3ItYWxsKCkge1xuICAkcHJlZml4LWZvci13ZWJraXQ6ICAgIGZhbHNlICFnbG9iYWw7XG4gICRwcmVmaXgtZm9yLW1vemlsbGE6ICAgZmFsc2UgIWdsb2JhbDtcbiAgJHByZWZpeC1mb3ItbWljcm9zb2Z0OiBmYWxzZSAhZ2xvYmFsO1xuICAkcHJlZml4LWZvci1vcGVyYTogICAgIGZhbHNlICFnbG9iYWw7XG4gICRwcmVmaXgtZm9yLXNwZWM6ICAgICAgZmFsc2UgIWdsb2JhbDtcbn1cbiIsIiRkYXJrLWdyYXk6ICMyNjJFMkU7XG4kbWVkaXVtLWRhcmstZ3JheTogbGlnaHRlbigkZGFyay1ncmF5LCA1MCUpO1xuXG4kZ3JheTogI0NBQzhDNztcbiRsaWdodC1ncmF5OiBsaWdodGVuKCRncmF5LCAzMCUpO1xuXG4kb2ZmV2hpdGU6ICNGQkZCRkI7XG4kd2hpdGU6ICNGRkZGRkY7XG5cbiR5ZWxsb3c6ICNGQUUwMzI7XG4kYmx1ZTogIzVEQzFEMjtcblxuJGJvZHktY29weTogJGRhcmstZ3JheTtcblxuJGFjY2VudC1jb2xvdXI6ICR5ZWxsb3c7XG4kZGV0YWlsLWNvbG91cjogJGJsdWU7XG5cbiRwYWdlLWhlYWRlci0tZ3JheTogJGxpZ2h0LWdyYXk7XG4kYmFja2dyb3VuZC1vZmZ3aGl0ZTogJG9mZldoaXRlO1xuJGJhY2tncm91bmQtd2hpdGU6ICR3aGl0ZTtcblxuJGJsYWNrOiAjMDAwOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
