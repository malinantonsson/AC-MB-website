html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

/*  SETTINGS FOR THE NEAT GRID */
/* http://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/ */
/*  get values from nested map  */
/*  http://andyshora.com/css-image-container-padding-hack.html  */
/*
List of font sizes / attributes
The null key == default styles (no media query)
Values can be one value (size) as px or a list of type attributes e.g.:
(size, color, weight, line-height, letter-spacing, text-transform)
null values in the list will be ommitted
 */
/*  Assign to vars - then use in type placeholders _placeholders.scss  */
@font-face {
  font-family: "Cardo-Regular";
  src: url("fonts/Cardo/Cardo-Regular.ttf"); }

@font-face {
  font-family: "Cardo-Italic";
  src: url("fonts/Cardo/Cardo-Italic.ttf"); }

@font-face {
  font-family: "SuisseBPIntl-Medium";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Medium.otf"); }

@font-face {
  font-family: "SuisseBPIntl-Bold";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Bold.otf"); }

@font-face {
  font-family: "SuisseBPIntl-Regular";
  src: url("fonts/SuisseBPIntl/SuisseBPIntl-Regular.otf"); }

@font-face {
  font-family: "Cormorant-Italic";
  src: url("fonts/Cormorant/Cormorant-Italic.ttf"); }

@font-face {
  font-family: "Cormorant-MediumItalic";
  src: url("fonts/Cormorant/Cormorant-MediumItalic.ttf"); }

body {
  -webkit-font-smoothing: antialiased;
  font-family: "Cormorant-MediumItalic", sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Cormorant-MediumItalic", sans-serif;
  margin: 0;
  text-rendering: optimizeLegibility; }

a {
  text-decoration: none;
  color: #ffffff; }

.nav_item {
  font-family: "SuisseBPIntl-Regular";
  color: #000; }

.nav_subitem {
  font-family: "SuisseBPIntl-Regular";
  color: #000; }

h1, .heading-1 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h1, .heading-1 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h1, .heading-1 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h1, .heading-1 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h1, .heading-1 {
      font-size: 64px; } }

h2, .heading-2 {
  font-size: 28px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 768px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 967px) {
    h2, .heading-2 {
      font-size: 28px; } }
  @media screen and (min-width: 1024px) {
    h2, .heading-2 {
      font-size: 28px; } }

h3, .heading-3 {
  font-size: 34px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    h3, .heading-3 {
      font-size: 36px; } }
  @media screen and (min-width: 768px) {
    h3, .heading-3 {
      font-size: 42px; } }
  @media screen and (min-width: 967px) {
    h3, .heading-3 {
      font-size: 60px; } }
  @media screen and (min-width: 1024px) {
    h3, .heading-3 {
      font-size: 64px; } }

p, .paragraph {
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 480px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    p, .paragraph {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    p, .paragraph {
      font-size: 20px; } }

.nav_item {
  font-size: 24px;
  font-weight: 400;
  line-height: 1.9em; }
  @media screen and (min-width: 480px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 768px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    .nav_item {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    .nav_item {
      font-size: 20px; } }

.nav_subitem {
  font-size: 16px;
  font-weight: 400;
  line-height: 2.9em; }
  @media screen and (min-width: 480px) {
    .nav_subitem {
      font-size: 16px; } }
  @media screen and (min-width: 768px) {
    .nav_subitem {
      font-size: 20px; } }
  @media screen and (min-width: 967px) {
    .nav_subitem {
      font-size: 20px; } }
  @media screen and (min-width: 1024px) {
    .nav_subitem {
      font-size: 20px; } }

/* components */
.nav {
  position: absolute;
  width: 100%;
  height: 20%;
  z-index: 10;
  overflow: hidden; }
  @media screen and (min-width: 768px) {
    .nav {
      height: auto; } }

.nav_item {
  font-family: "SuisseBPIntl-Regular", sans-serif; }
  @media screen and (min-width: 768px) {
    .nav_item {
      display: inline-block;
      padding-left: 2em; } }
  @media screen and (min-width: 967px) {
    .nav_item {
      display: inline-block;
      padding-left: 2.5em; } }

@media screen and (min-width: 768px) {
  .nav_subitem-wrapper {
    display: none; } }

.nav-item--home {
  display: none; }
  @media screen and (min-width: 768px) {
    .nav-item--home {
      display: inline-block;
      float: right;
      padding-left: 0;
      width: 30%; } }
  @media screen and (min-width: 967px) {
    .nav-item--home {
      width: auto; } }

.nav_wrapper,
.nav_subitem-wrapper {
  list-style: none;
  padding: 0;
  margin: 0; }

.nav_subitem-wrapper {
  padding-bottom: .7em; }

@media screen and (max-width: 767px) {
  .nav_wrapper {
    display: none;
    text-align: center;
    position: relative;
    top: 50%;
    -webkit-transform: translate(0, -50%);
    transform: translate(0, -50%);
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%); } }

@media screen and (min-width: 768px) {
  .nav_wrapper {
    padding-top: 4em; } }

.nav_button--close {
  width: 2.5em;
  height: 2.5em;
  display: none; }

.nav_icon--logo.logo-xs {
  position: absolute;
  right: 1.5em;
  top: 3em;
  width: 3em;
  height: 3em; }
  @media screen and (min-width: 768px) {
    .nav_icon--logo.logo-xs {
      display: none; } }

.nav_icon--logo.logo-xl {
  display: none; }
  @media screen and (min-width: 768px) {
    .nav_icon--logo.logo-xl {
      display: inline;
      height: 42px; } }

.nav_button {
  outline: none;
  position: absolute;
  left: 1.5em;
  top: 3em;
  width: 2.5em;
  height: 2.5em;
  background-color: transparent;
  border: none;
  z-index: 11; }
  @media screen and (min-width: 768px) {
    .nav_button {
      display: none; } }

.nav_icon {
  position: absolute;
  left: 0;
  top: 0;
  width: 2.5em;
  height: 2.5em; }

@media screen and (max-width: 767px) {
  .nav-is-open {
    overflow: hidden; }
    .nav-is-open .nav {
      background-color: #262E2E;
      height: 100%; }
    .nav-is-open .nav_button--close {
      display: block; }
    .nav-is-open .nav_button--open {
      display: none; }
    .nav-is-open .nav_wrapper {
      display: block; }
    .nav-is-open .nav_icon--logo {
      opacity: 0; } }

.header {
  position: relative;
  overflow: hidden; }

@media screen and (max-width: 767px) {
  .header_img {
    min-height: 559px;
    max-height: 559px;
    left: -200%;
    right: -200%;
    margin: auto; } }

@media screen and (min-width: 768px) {
  .header_img {
    max-width: 100%; } }

/* #video{
 position: relative;
 background: transparent;
}

.ytplayer-container{
 position: absolute;
 top: 0;
 z-index: -1;
} */

/*# sourceMappingURL=data:application/json;base64, */
